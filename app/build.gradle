plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-parcelize'
    id 'kotlin-kapt'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
    id 'org.sonarqube'
    id 'dagger.hilt.android.plugin'
}

android {
    compileSdk 33

    defaultConfig {
        applicationId "br.com.petsus"
        minSdk 23
        targetSdk 33
        versionCode 1
        versionName "0.0.1"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    viewBinding {
        enabled true
    }

    dataBinding {
        enabled = true
    }

    flavorDimensions "version"

    productFlavors {
        normal {
            dimension "version"
        }
        local {
            dimension "version"
            versionNameSuffix "-test"
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            buildConfigField("String", "BASE_URL", '"http://10.0.2.2:8080/"')
            manifestPlaceholders = [ BASE_HOST : "10.0.2.2", PORT_HOST : "8080", MAPS_API_KEY : 'AIzaSyAnBpQa8inbxF4tB6d5DIEBRuULQ70bIBs' ]
        }
        dev {
            signingConfig signingConfigs.debug

            buildConfigField("String", "BASE_URL", '"https://5c08-2804-431-cfcd-7cad-25e9-746-4ead-7e71.sa.ngrok.io/"')
            manifestPlaceholders = [ BASE_HOST : "5c08-2804-431-cfcd-7cad-25e9-746-4ead-7e71.sa.ngrok.io", PORT_HOST : "8080", MAPS_API_KEY : 'AIzaSyAnBpQa8inbxF4tB6d5DIEBRuULQ70bIBs' ]
        }
        debug {
            buildConfigField("String", "BASE_URL", '"http://10.0.2.2:8080/"')
            manifestPlaceholders = [ BASE_HOST : "10.0.2.2", PORT_HOST : "8080", MAPS_API_KEY : 'AIzaSyAnBpQa8inbxF4tB6d5DIEBRuULQ70bIBs' ]
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    namespace 'br.com.petsus'
}

dependencies {

    implementation('androidx.core:core-ktx:1.9.0')
    implementation('androidx.appcompat:appcompat:1.6.1')
    implementation('com.google.android.material:material:1.8.0')
    implementation('androidx.lifecycle:lifecycle-livedata-ktx:2.5.1')

    testImplementation('junit:junit:4.13.2')
    androidTestImplementation('androidx.test.ext:junit:1.1.5')
    androidTestImplementation('androidx.test.espresso:espresso-core:3.5.1')

    implementation('org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.1')
    implementation('org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.1')

    implementation('androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.1')
    implementation('androidx.lifecycle:lifecycle-livedata-ktx:2.5.1')

    implementation('androidx.fragment:fragment-ktx:1.5.5')

    normalImplementation('com.squareup.retrofit2:retrofit:2.9.0')
    normalImplementation('com.squareup.retrofit2:converter-gson:2.9.0')
    normalImplementation('com.squareup.okhttp3:logging-interceptor:4.10.0')

//    implementation('com.github.RedMadRobot:input-mask-android:6.1.0')

    implementation platform('com.google.firebase:firebase-bom:30.2.0')
    implementation('com.google.firebase:firebase-analytics-ktx')
    implementation('com.google.firebase:firebase-crashlytics-ktx')
    implementation('com.google.firebase:firebase-messaging-ktx')

    implementation('com.google.android.gms:play-services-maps:18.1.0')
    implementation('com.google.android.gms:play-services-location:21.0.1')

    implementation('com.airbnb.android:lottie:4.2.1')
    implementation('androidx.browser:browser:1.5.0')

    implementation('androidx.core:core-splashscreen:1.0.0')
    implementation('com.github.tapadoo:alerter:7.2.4')

    implementation('com.github.EudyContreras:Skeleton-Bones:v1.4.5')

    implementation('com.github.bumptech.glide:glide:4.14.1')
    kapt('com.github.bumptech.glide:compiler:4.14.1')

    implementation("com.google.dagger:hilt-android:2.44")
    kapt("com.google.dagger:hilt-compiler:2.44")
}

kapt {
    correctErrorTypes true
}

sonarqube {
    Properties propertiesValues = new Properties()
    propertiesValues.load(project.rootProject.file('local.properties').newDataInputStream())

    properties {
        property "sonar.projectName", "Petsus Android"
        property "sonar.projectKey", "petsus-android"
        property "sonar.sources", "src"
        property "sonar.sourceEncoding", "UTF-8"
        property "sonar.tests", ["src/test/java"]
        property "sonar.test.inclusions", "**/*Test*/**"
        property "sonar.login", "admin"
        property "sonar.password", propertiesValues.getProperty('sonar.password')
    }
}